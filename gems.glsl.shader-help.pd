#N canvas 341 22 967 659 10;
#X obj 10 460 cnv 15 400 60 empty empty empty 20 12 0 14 -258113 -66577
0;
#X obj 55 178 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 85 147 Description: Renders a GLSL shader.;
#X text 81 174 <---- 1 Create Gem window;
#X obj 55 198 gems.win 480 480;
#X msg 423 300 bang;
#X text 463 301 <--- 3 Play with the parameters;
#X text 457 227 You can get the (uniform) parameters of the GLSL shaders
by sending "print" to the second inlet. Then \, send messages with
those selectors to the third inlet. The type is usually either a float
\, or a vector (two or three floats).;
#X text 53 16 A GLSL shader program is made of two distinct shaders
: the vertex shader \, which might change the position and other attributes
of the vertices \, and the fragment shaders \, which might modify the
pixels on the texture. They override the normal flow of rendering chain
on the GPU. They are compiled and uploaded on the GPU (graphic card)
\, which means that they don't consume CPU time in their calculations.
You can edit your own shaders \, as they are just text files on your
hard drive.;
#X obj 17 250 gemhead;
#X obj 423 371 metro 500;
#X obj 423 352 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 456 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 478 93 <---- 2 Load vertex and fragment;
#X obj 423 437 line;
#X obj 423 335 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 423 460 twirl \$1;
#X obj 515 371 metro 500;
#X obj 515 352 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 515 437 line;
#X msg 515 460 size \$1;
#X msg 661 459 origin \$1 \$2;
#X msg 97 350 device 0;
#N canvas 162 133 574 424 serin 0;
#X obj 205 60 cnv 20 20 20 empty \$0-open-canvas 0 4 10 0 16 -233017
-1 0;
#X obj 60 61 hradio 18 1 1 8 empty empty empty 0 -6 0 8 -225271 -1
-1 0;
#X obj 60 13 inlet;
#X msg 200 202 label \$1;
#X obj 200 180 makefilename %d;
#X obj 59 108 int;
#X obj 59 337 outlet;
#X msg 201 306 set \$1 \$2;
#X obj 59 266 trigger bang anything;
#X obj 201 286 list;
#X obj 200 225 send \$0-open-canvas;
#X msg 60 210 device \$1;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 5 0 11 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 8 1 9 0;
#X connect 9 0 7 0;
#X connect 11 0 8 0;
#X coords 0 -1 1 1 165 20 1 60 60;
#X restore 97 326 pd serin;
#X obj 31 543 colorRGB 1 1 1 1;
#X obj 41 405 pix_rgba;
#X obj 17 274 alpha 1;
#X floatatom 575 461 5 0 0 0 - - -;
#X obj 41 426 pix_texture;
#X obj 423 393 random.f -20 20;
#X obj 515 393 random.f 200 500;
#X floatatom 481 328 5 0 0 0 - - -;
#X msg 423 415 \$1 2000;
#X msg 514 415 \$1 2000;
#X msg 457 205 fragment openpanel;
#X msg 457 170 print;
#X text 587 203 <-- Open fragment or vertex file...;
#X text 86 217 Argument: @fragment Shader for the pixels;
#X text 86 233 Argument: @vertex Shader for the vertices;
#X msg 500 553 ------------;
#X obj 501 577 print ---------;
#X obj 88 374 pix_video;
#X obj 43 476 gems.glsl.shader @fragment medias/shaders/twirl.frag
@vertex medias/shaders/twirl.vert;
#X obj 663 349 random.f 0 -600;
#X obj 766 348 random.f 0 -500;
#X obj 663 434 pack 0 0;
#X obj 665 325 t b b;
#X obj 586 371 metro 1500;
#X obj 589 349 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 662 395 line;
#X msg 662 373 \$1 2000;
#X obj 764 395 line;
#X msg 764 373 \$1 2000;
#X obj 30 565 rectangle 4 3;
#X floatatom 560 437 5 0 0 0 - - -;
#X floatatom 455 437 5 0 0 0 - - -;
#X text 592 550 Clear console;
#X text 89 252 Flags: @rguments;
#X msg 457 129 fragment medias/shaders/twirl.frag \, vertex medias/shaders/twirl.vert
;
#X text 507 170 <-- Print info on the attributes the shaders accept
;
#X connect 1 0 4 0;
#X connect 5 0 15 0;
#X connect 9 0 26 0;
#X connect 10 0 29 0;
#X connect 11 0 10 0;
#X connect 12 0 58 0;
#X connect 14 0 16 0;
#X connect 15 0 11 0;
#X connect 15 0 18 0;
#X connect 15 0 48 0;
#X connect 16 0 42 2;
#X connect 17 0 30 0;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 19 0 27 0;
#X connect 20 0 42 2;
#X connect 21 0 42 2;
#X connect 22 0 41 0;
#X connect 23 0 22 0;
#X connect 24 0 53 0;
#X connect 25 0 28 0;
#X connect 26 0 41 0;
#X connect 28 0 42 0;
#X connect 29 0 32 0;
#X connect 30 0 33 0;
#X connect 31 0 10 1;
#X connect 32 0 14 0;
#X connect 33 0 19 0;
#X connect 34 0 42 1;
#X connect 35 0 42 1;
#X connect 39 0 40 0;
#X connect 41 0 25 0;
#X connect 42 0 24 0;
#X connect 43 0 50 0;
#X connect 44 0 52 0;
#X connect 45 0 21 0;
#X connect 46 0 43 0;
#X connect 46 1 44 0;
#X connect 47 0 46 0;
#X connect 48 0 47 0;
#X connect 49 0 45 0;
#X connect 50 0 49 0;
#X connect 51 0 45 1;
#X connect 52 0 51 0;
#X connect 54 0 20 0;
#X connect 55 0 16 0;
#X connect 58 0 42 1;
